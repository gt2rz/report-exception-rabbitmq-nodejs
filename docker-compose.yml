services:
  app:
    container_name: ${APP_NAME}
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    env_file:
      - .env
    ports:
      - ${APP_PORT}:3000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - rabbitmq
      - elasticsearch
    networks:
      - consumer-network
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - ${RABBITMQ_PORT}:5672
      - ${RABBITMQ_HTTP_PORT}:15672
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - consumer-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    volumes:
      - data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es01
      - discovery.type=single-node
      - ELASTIC_PASSWORD=123456789
      - ELASTIC_USERNAME=elastic
      - xpack.security.enabled=true
    mem_limit: 1024M
    networks:
      - consumer-network

  # kibana:
  #   container_name: kb-container
  #   image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
  #   volumes:
  #     - kibanadata:/usr/share/kibana/data
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://192.168.208.2:9200
  #     - xpack.security.enabled=false
  #   networks:
  #     - consumer-network

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: 'prometheus'
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - consumer-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: 'grafana'
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - consumer-network
  
networks:
  consumer-network:
    driver: bridge

volumes:
  data:
    driver: local
  # kibanadata:
  #   driver: local
